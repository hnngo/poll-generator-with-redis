* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

$theme-colors: (
  "main-bg":          #282c34,
  "off-white":        #dfdfdf,
  "disabled-text":    #aaaaaa,
  "dark-orange":      #e0662e,
  "main-orange":      #e6b87c,
  "dim-orange":       #d8b18294,
  "trans-orange":     #d8b18252,
  "shadow-orange":    #e7c89f,
  "shadow-dark":      #333333,
  "light-bar":        #e6b87c15,
  "dim-black":        #555555,
  "placeholder-bg":   #cab79d6e,
  "placeholder-text": rgba(185, 184, 184, 0.568),
  "danger-text":      rgb(236, 60, 60),
  "shadow-danger":    rgb(121, 46, 46),
);

$breakpoints: (
  "phone":        576px,
  "tablet":       768px,
  "tablet-wide":  992px,
  "desktop":      1200px,
  "desktop-wide": 1440px
);

// Font family
@mixin fontFam ($type: default) {
  @if $type == default {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  } @else if $type == lucida {
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  } @else if $type == courier {
    font-family: 'Courier New', Courier, monospace;
  } @else if $type == verdana {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
  }
}

// Font style
@mixin fontSetting ($fontFam: default, $fontSize: 16px, $fontColor: white, $fontWeight: 400, $fontStyle: normal, $letterSpacing: unset) {
  // Font family
  @include fontFam($fontFam);

  // Color
  @if map-has-key($map: $theme-colors, $key: $fontColor) {
    color: map-get($map: $theme-colors, $key: $fontColor);
  } @else {
    color: $fontColor;
  }

  // Font Size, Weight, Style and letter spacing
  font-size: $fontSize;
  font-weight: $fontWeight;
  font-style: $fontStyle;
  letter-spacing: $letterSpacing;
}

// Media querries
@mixin mq($width, $type: min) {
  @if map-has-key($map: $breakpoints, $key: $width){
    $width: map-get($map: $breakpoints, $key: $width);
    @if $type == max {
      $width: $width - 1px;
      @media only screen and (max-width: $width) {
        @content;
      }
    } @else {
      @media only screen and (min-width: $width) {
        @content;
      }
    }
  }
};

// Display set
@mixin display ($type: unset, $justifyConten: unset, $alignItems: unset, $flexDirection: row) {
  display: $type;
  justify-content: $justifyConten;
  align-items: $alignItems;
  flex-direction: $flexDirection;
}

@mixin pos ($type: unset, $top: unset, $right: unset, $bottom: unset, $left: unset) {
  position: $type;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

.app-container {
  text-align: center;
  background-color: map-get($map: $theme-colors, $key: main-bg);
  height: 100vh;
  @include display(flex, unset, center, column);
  overflow-y: auto;

  .header-light-bar {
    width: 100%;
    @include display(flex, flex-end, unset);
    background-color: map-get($map: $theme-colors, $key: light-bar);

    div {
      color: map-get($map: $theme-colors, $key: dim-orange);
      padding: 5px 10px;
      cursor: pointer;

      @include mq(tablet, min) {
        &:hover {
          color: map-get($map: $theme-colors, $key: main-orange);
        }
      }
    }

    .header-auth-name {
      @include fontSetting(lucida, 1rem, main-orange, bold);
    }
  }

  .app-header {
    @include fontSetting(courier, 3.5rem, main-orange, bold);
    padding-top: 20px;
  }

  .app-content {
    width: 100%;
    position: relative;

    &::before {
      content: "";
      @include pos(absolute, 0px, $left: 50%);
      height: 2px;
      width: 70vw;
      transform: translateX(-50%);
      background-color: map-get($map: $theme-colors, $key: dim-orange);
    }
  }
}

.nav-btn-container {
  @include display(flex, center, center);
  margin-bottom: 10px;

  .tab-active {
    color: map-get($map: $theme-colors, $key: main-orange);

    &::before {
      width: 100%;
    }
  }

  div {
    @include fontSetting(verdana, 18px, disabled-text, bold, normal, 1px);
    margin: 10px 20px;
    padding: 5px 0px;
    cursor: pointer;
    position: relative;

    &::before {
      position: absolute;
      content: "";
      bottom: 0px;
      left: 0px;
      height: 3px;
      transition: 0.6s;
      background-color: map-get($map: $theme-colors, $key: main-orange);
      width: 0px;
    }

    &:hover {
      color: map-get($map: $theme-colors, $key: main-orange);
    }

    &:hover::before {
      width: 100%;
    }
  }
}

.polling-containter {
  margin-top: 20px;
  color: white;

  .polling-btn-start {
    margin: 10px;
  }
}

.btn-main-danger,
.btn-main-orange {
  padding: 10px 20px;
  border-radius: 10px;
  border: none;
  outline: none!important;
  cursor: pointer;
  
  &:active {
    box-shadow: inset 0px 0px 4px 0px map-get($map: $theme-colors, $key: shadow-dark);
  }

  button {
    border: none;
    background: none;
  }
}

.btn-main-orange {
  background-color: map-get($map: $theme-colors, $key: main-orange);
  box-shadow: 0px 0px 4px 0px map-get($map: $theme-colors, $key: shadow-orange);
  color: map-get($map: $theme-colors, $key: dim-black);
}

.btn-main-danger {
  background-color: map-get($map: $theme-colors, $key: danger-text);
  box-shadow: 0px 0px 4px 0px map-get($map: $theme-colors, $key: shadow-danger);
  color: map-get($map: $theme-colors, $key: off-white);
}

.auth-form-container {
  padding: 20px 0px;
  @include pos(absolute, $left: 50%);
  transform: translateX(-50%);
  width: 380px;

  @include mq(tablet, max) {
    width: 340px;
  }

  .auth-header {
    @include fontSetting(default, 1.5rem, main-orange, bold, unset, 1px);
  }

  form {
    .row {
      margin: 14px 0;

      .col-3 {
        padding: 0;
        text-align: right;
      }

      .input-label {
        color: map-get($map: $theme-colors, $key: main-orange);
        padding: 5px 0;
      }
    }

    .btn-main-orange {
      margin-top: 10px;
      padding: 6px 120px;
    }

    .form-errmsg {
      color: map-get($map: $theme-colors, $key: danger-text);
    }

    .auth-switch {
      @include fontSetting(default, 14px, off-white);
      margin-top: 30px;
      cursor: pointer;
    }
  }
}

.input-field {
  input {
    border: none;
    outline: none;
    background-color: map-get($map: $theme-colors, $key: placeholder-bg);
    padding: 5px 0px 5px 10px;
    border-radius: 10px;
    width: 100%;

    &::placeholder {
      color: map-get($map: $theme-colors, $key: placeholder-text);
    }
  }

  .error-border {
    border: 1px solid map-get($map: $theme-colors, $key: danger-text);
  }

  .error-text {
    @include fontSetting(default, 14px, danger-text);
    padding-left: 8px;
    text-align: left;
  }
}

.new-poll-container {
  margin: 20px;
  text-align: left;
}

.poll-setting-form {
  position: relative;
  background-color: map-get($map: $theme-colors, $key: trans-orange);
  width: 100%;
  padding: 20px;
  border-radius: 20px;

  @include mq(tablet, min) {
    padding: 20px 40px;
    width: 80%;
    @include pos(relative, $left: 50%);
    transform: translateX(-50%);
  }

  .poll-question {
    p {
      @include fontSetting(verdana, 1.8rem, main-orange, bold);
    }

    .input-field {
      margin-bottom: 20px;
    }
  }

  .poll-options {
    .option-func {
      @include display(flex, space-between);

      .header-text {
        @include fontSetting(verdana, 1.2rem, main-orange);
      }

      .btn-main-orange {
        @include fontSetting(default, 12px, dim-black);
        padding: 3px 10px;
        height: 25px;
        cursor: pointer;
      }
    }

    .input-field {
      margin-bottom: 8px;
    }
  }

  .poll-setting {
    margin-top: 20px;

    .setting-header {
      @include fontSetting(verdana, 1.2rem, main-orange);
    }

    .set-public,
    .set-mutiple-choice {
      @include display(flex, space-between);

      p {
        @include fontSetting(default, 1rem, off-white, 400, italic);
      }
    }
  }

  .poll-btn {
    @include display(flex, flex-end);
    margin-top: 10px;

    .btn-main-orange {
      margin: 0px 10px;
      height: 35px;
      padding: 0 20px;
    }

    .btn-main-danger {
      height: 35px;
      padding: 5px 20px;
    }
  }
}

.poll-card-container {
  @include pos(relative, $left: 50%);
  transform: translateX(-50%);
  background-color: map-get($map: $theme-colors, $key: shadow-orange);
  max-width: 800px;
  margin: 20px;
  border-radius: 20px;
  box-shadow: 1px 1px 3px 0px map-get($map: $theme-colors, $key: off-white);

  .poll-question {
    @include fontSetting(default, 1.5rem, dim-black, bold);
    text-align: left;
    padding: 10px 0px 10px 20px;
  }

  .poll-options {
    @include fontSetting(default, 1rem, dim-black);
    text-align: left;
    padding: 0px 0px 10px 20px;

    ul {
      list-style: circle;

      li {
        margin-left: 30px;
      }
    }
  }

  .poll-info {
    @include display(flex, space-between);
    padding: 10px 20px;

    .poll-user-created {
      @include fontSetting(default, 1rem, dim-black, 400, italic);
      @include display(flex);
    }

    .poll-updated-time {
      @include fontSetting(default, 1rem, dim-black);     
    }
  }
}